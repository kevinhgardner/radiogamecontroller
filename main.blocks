<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="[[fKr4nX2E^FfIpiSi7F" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="ttcrNR2KZ=$A|QESugk:" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let radioId = 0" numlines="1" declaredvars="radioId"></mutation><next><block type="typescript_statement" id="{151Oe5]Xb]vbdJlS6Nd" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let enabled = false" numlines="1" declaredvars="enabled"></mutation><next><block type="typescript_statement" id="`FcaYT`6l{.eJ90ylo5C" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace RadioGameController {" line1="" line2="    export enum ControllerButtons {" line3="        //% block=&quot;Joypad Up&quot;" line4="        Up," line5="        //% block=&quot;Joypad Down&quot;" line6="        Down," line7="        //% block=&quot;Joypad Left&quot;" line8="        Left," line9="        //% block=&quot;Joypad Right&quot;" line10="        Right," line11="        //% block=&quot;Fire 1&quot;" line12="        Fire1," line13="        //% block=&quot;Fire 2&quot;" line14="        Fire2" line15="    }" line16="" line17="    export enum ControllerButtonEvents {" line18="        //% block=&quot;down&quot;" line19="        Down = DAL.MICROBIT_BUTTON_EVT_DOWN," line20="        //% block=&quot;up&quot;" line21="        Up = DAL.MICROBIT_BUTTON_EVT_UP," line22="        //% block=&quot;click&quot;" line23="        Click = DAL.MICROBIT_BUTTON_EVT_CLICK" line24="    }" line25="" line26="    //% block" line27="    export function enable(radio2: number) {" line28="        radioId = radio2" line29="        enabled = true" line30="        radio.setGroup(radioId)" line31="    }" line32="    //% block" line33="    export function disable() {" line34="        enabled = false" line35="    }" line36="" line37="    //% block" line38="    export function onButtonPress(button: ControllerButtons, event: ControllerButtonEvents, handler: Action) {" line39="        control.onEvent(&lt;number&gt;button, &lt;number&gt;event, handler);" line40="    }" line41="" line42="    input.onButtonPressed(Button.A, function () {" line43="        //music.playTone(262, music.beat(BeatFraction.Whole))" line44="        control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Down)" line45="    })" line46="" line47="    function doActionLeft(event: string) {" line48="        if (event == &quot;u&quot;) {" line49="            control.raiseEvent(ControllerButtons.Left, ControllerButtonEvents.Up)" line50="        } else if (event == &quot;d&quot;) {" line51="            control.raiseEvent(ControllerButtons.Left, ControllerButtonEvents.Down)" line52="        } else if (event == &quot;c&quot;) {" line53="            control.raiseEvent(ControllerButtons.Left, ControllerButtonEvents.Click)" line54="        }" line55="    }" line56="    function doActionRight(event: string) {" line57="        if (event == &quot;u&quot;) {" line58="            control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Up)" line59="        } else if (event == &quot;d&quot;) {" line60="            control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Down)" line61="        } else if (event == &quot;c&quot;) {" line62="            control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Click)" line63="        }" line64="    }" line65="    function doActionFire2(event: string) {" line66="        if (event == &quot;u&quot;) {" line67="            control.raiseEvent(ControllerButtons.Fire2, ControllerButtonEvents.Up)" line68="        } else if (event == &quot;d&quot;) {" line69="            control.raiseEvent(ControllerButtons.Fire2, ControllerButtonEvents.Down)" line70="        } else if (event == &quot;c&quot;) {" line71="            control.raiseEvent(ControllerButtons.Fire2, ControllerButtonEvents.Click)" line72="        }" line73="" line74="    }" line75="    function doActionUp(event: string) {" line76="        if (event == &quot;u&quot;) {" line77="            control.raiseEvent(ControllerButtons.Up, ControllerButtonEvents.Up)" line78="        } else if (event == &quot;d&quot;) {" line79="            control.raiseEvent(ControllerButtons.Up, ControllerButtonEvents.Down)" line80="        } else if (event == &quot;c&quot;) {" line81="            control.raiseEvent(ControllerButtons.Up, ControllerButtonEvents.Click)" line82="        }" line83="" line84="    }" line85="    function doActionFire1(event: string) {" line86="        if (event == &quot;u&quot;) {" line87="            control.raiseEvent(ControllerButtons.Fire1, ControllerButtonEvents.Up)" line88="        } else if (event == &quot;d&quot;) {" line89="            control.raiseEvent(ControllerButtons.Fire1, ControllerButtonEvents.Down)" line90="        } else if (event == &quot;c&quot;) {" line91="            control.raiseEvent(ControllerButtons.Fire1, ControllerButtonEvents.Click)" line92="        }" line93="" line94="    }" line95="    function doActionDown(event: string) {" line96="        if (event == &quot;u&quot;) {" line97="            control.raiseEvent(ControllerButtons.Down, ControllerButtonEvents.Up)" line98="        } else if (event == &quot;d&quot;) {" line99="            control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Down)" line100="        } else if (event == &quot;c&quot;) {" line101="            control.raiseEvent(ControllerButtons.Right, ControllerButtonEvents.Click)" line102="        }" line103="" line104="    }" line105="" line106="    function doButtonRight(event5: string) {" line107="        if (enabled) {" line108="            doSendButtonState(&quot;right&quot;, event5)" line109="            doActionRight(event5)" line110="        }" line111="    }" line112="    function doGetEventFromNum(num: number) {" line113="        if (num == 0) {" line114="            return &quot;u&quot;" line115="        } else if (num == 1) {" line116="            return &quot;d&quot;" line117="        } else if (num == 2) {" line118="            return &quot;c&quot;" line119="        }" line120="        return &quot;&quot;" line121="    }" line122="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line123="        doButtonFire1(&quot;d&quot;)" line124="    })" line125="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line126="        doButtonRight(&quot;c&quot;)" line127="    })" line128="    function doButtonFire2(event8: string) {" line129="        if (enabled) {" line130="            doSendButtonState(&quot;fire2&quot;, event8)" line131="            doActionFire2(event8)" line132="        }" line133="    }" line134="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line135="        doButtonFire2(&quot;d&quot;)" line136="    })" line137="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line138="        doButtonUp(&quot;c&quot;)" line139="    })" line140="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line141="        doButtonRight(&quot;u&quot;)" line142="    })" line143="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line144="        doButtonDown(&quot;u&quot;)" line145="    })" line146="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line147="        doButtonDown(&quot;c&quot;)" line148="    })" line149="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line150="        doButtonDown(&quot;d&quot;)" line151="    })" line152="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line153="        doButtonLeft(&quot;u&quot;)" line154="    })" line155="    function doButtonDown(event2: string) {" line156="        if (enabled) {" line157="            doSendButtonState(&quot;down&quot;, event2)" line158="            doActionDown(event2)" line159="        }" line160="    }" line161="    function doButtonFire1(event: string) {" line162="        if (enabled) {" line163="            doSendButtonState(&quot;fire1&quot;, event)" line164="            doActionFire1(event)" line165="        }" line166="    }" line167="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line168="        doButtonFire2(&quot;c&quot;)" line169="    })" line170="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line171="        doButtonUp(&quot;d&quot;)" line172="    })" line173="    function doButtonLeft(event6: string) {" line174="        if (enabled) {" line175="            doSendButtonState(&quot;left&quot;, event6)" line176="            doActionLeft(event6)" line177="        }" line178="    }" line179="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line180="        doButtonFire2(&quot;u&quot;)" line181="    })" line182="    function doSendButtonState(id2: string, event3: string) {" line183="        if (enabled) {" line184="            if (event3 == &quot;u&quot;) {" line185="                radio.sendValue(id2, 0)" line186="            } else if (event3 == &quot;d&quot;) {" line187="                radio.sendValue(id2, 1)" line188="            } else if (event3 == &quot;c&quot;) {" line189="                radio.sendValue(id2, 2)" line190="            }" line191="        }" line192="    }" line193="    function doButtonUp(event4: string) {" line194="        if (enabled) {" line195="            doSendButtonState(&quot;up&quot;, event4)" line196="            doActionUp(event4)" line197="        }" line198="    }" line199="    radio.onReceivedValue(function (name, value) {" line200="        if (enabled) {" line201="            if (name == &quot;up&quot;) {" line202="                doActionUp(doGetEventFromNum(value))" line203="            } else if (name == &quot;down&quot;) {" line204="                doActionDown(doGetEventFromNum(value))" line205="            } else if (name == &quot;left&quot;) {" line206="                doActionLeft(doGetEventFromNum(value))" line207="            } else if (name == &quot;right&quot;) {" line208="                doActionRight(doGetEventFromNum(value))" line209="            } else if (name == &quot;fire1&quot;) {" line210="                doActionFire1(doGetEventFromNum(value))" line211="            } else if (name == &quot;fire2&quot;) {" line212="                doActionFire2(doGetEventFromNum(value))" line213="            }" line214="        }" line215="    })" line216="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line217="        doButtonUp(&quot;u&quot;)" line218="    })" line219="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line220="        doButtonFire1(&quot;u&quot;)" line221="    })" line222="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line223="        doButtonLeft(&quot;c&quot;)" line224="    })" line225="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line226="        doButtonRight(&quot;d&quot;)" line227="    })" line228="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line229="        doButtonFire1(&quot;c&quot;)" line230="    })" line231="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line232="        doButtonLeft(&quot;d&quot;)" line233="    })" line234="" line235="}" numlines="236"></mutation></block></next></block></next></block></statement></block><block type="control_raise_event" id="jhyzkq]B@kQ%,u]WWdUm" disabled="true" x="1927" y="603"><value name="src"><shadow type="control_event_source_id" id="G,I[n1Y#^VD9Z4JX3l=," disabled="true"><field name="id">EventBusSource.MICROBIT_ID_BUTTON_A</field></shadow></value><value name="value"><shadow type="control_event_value_id" id="KA~`4?X]}Hee4z]iQz[G" disabled="true"><field name="id">EventBusValue.MICROBIT_EVT_ANY</field></shadow></value></block></xml>