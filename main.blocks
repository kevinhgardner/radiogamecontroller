<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="5y@E!WQMs)2d;(%7#%e5" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="LwlZ$reqnuQv8yLD`%Q#" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let enabled = false" numlines="1" declaredvars="enabled"></mutation><next><block type="typescript_statement" id="avmE*OHN(a#-?(BrmPDE" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let radioId = 0" numlines="1" declaredvars="radioId"></mutation><next><block type="typescript_statement" id="p}?#u-OA`FJIGw2DZ]ny" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let isController = false" numlines="1" declaredvars="isController"></mutation><next><block type="typescript_statement" id="aW.Trf]_qkQze3T+upVF" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace RadioGameController {" line1="" line2="    export enum ControllerButtons {" line3="        Up," line4="        Down," line5="        Left," line6="        Right," line7="        Fire1," line8="        Fire2" line9="    }" line10="" line11="    export enum ControllerButtonEvents {" line12="        //% block=&quot;down&quot;" line13="        Down = DAL.MICROBIT_BUTTON_EVT_DOWN," line14="        //% block=&quot;up&quot;" line15="        Up = DAL.MICROBIT_BUTTON_EVT_UP," line16="        //% block=&quot;click&quot;" line17="        Click = DAL.MICROBIT_BUTTON_EVT_CLICK" line18="    }" line19="" line20="    export enum ControllerButtonPins {" line21="        //% block=&quot;Joypad Up&quot;" line22="        Up = DAL.MICROBIT_ID_IO_P8," line23="        //% block=&quot;Joypad Down&quot;" line24="        Down = DAL.MICROBIT_ID_IO_P14," line25="        //% block=&quot;Joypad Left&quot;" line26="        Left = DAL.MICROBIT_ID_IO_P12," line27="        //% block=&quot;Joypad Right&quot;" line28="        Right = DAL.MICROBIT_ID_IO_P13," line29="        //% block=&quot;Fire 1&quot;" line30="        Fire1 = DAL.MICROBIT_ID_IO_P15," line31="        //% block=&quot;Fire 2&quot;" line32="        Fire2 = DAL.MICROBIT_ID_IO_P16" line33="    }" line34="" line35="    //% block" line36="    export function enable(radio2: number, controller: boolean) {" line37="        radioId = radio2" line38="        isController = controller" line39="        enabled = true" line40="        radio.setGroup(radioId)" line41="        radio.sendString(&quot;reset&quot;)" line42="    }" line43="    //% block" line44="    export function reset() {" line45="        if (enabled) {" line46="            radio.sendString(&quot;reset&quot;)" line47="        }" line48="    }" line49="    //% block" line50="    export function disable() {" line51="        enabled = false" line52="    }" line53="" line54="    //% block" line55="    export function onButtonPress(button: ControllerButtonPins, event: ControllerButtonEvents, handler: Action) {" line56="        //control.onEvent(&lt;number&gt;button, &lt;number&gt;event, handler);" line57="    }" line58="" line59="    function doActionLeft(event84: string) {" line60="" line61="    }" line62="" line63="    function doButtonRight(event5: string) {" line64="        if (enabled) {" line65="            doSendButtonState(&quot;right&quot;, event5)" line66="            doActionRight(event5)" line67="        }" line68="    }" line69="    function doActionDown(event83: string) {" line70="" line71="    }" line72="    function doGetEventFromNum(num: number) {" line73="        if (num == 0) {" line74="            return &quot;u&quot;" line75="        } else if (num == 1) {" line76="            return &quot;d&quot;" line77="        } else if (num == 2) {" line78="            return &quot;c&quot;" line79="        }" line80="        return &quot;&quot;" line81="    }" line82="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line83="        doButtonFire1(&quot;d&quot;)" line84="    })" line85="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line86="        doButtonRight(&quot;c&quot;)" line87="    })" line88="    function doButtonFire2(event8: string) {" line89="        if (enabled) {" line90="            doSendButtonState(&quot;fire2&quot;, event8)" line91="            doActionFire2(event8)" line92="        }" line93="    }" line94="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line95="        doButtonFire2(&quot;d&quot;)" line96="    })" line97="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line98="        doButtonUp(&quot;c&quot;)" line99="    })" line100="    function doActionFire1(event86: string) {" line101="" line102="    }" line103="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line104="        doButtonRight(&quot;u&quot;)" line105="    })" line106="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line107="        doButtonDown(&quot;u&quot;)" line108="    })" line109="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line110="        doButtonDown(&quot;c&quot;)" line111="    })" line112="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line113="        doButtonDown(&quot;d&quot;)" line114="    })" line115="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line116="        doButtonLeft(&quot;u&quot;)" line117="    })" line118="    function doActionRight(event85: string) {" line119="" line120="    }" line121="    function doButtonDown(event2: string) {" line122="        if (enabled) {" line123="            doSendButtonState(&quot;down&quot;, event2)" line124="            doActionDown(event2)" line125="        }" line126="    }" line127="    function doButtonFire1(event: string) {" line128="        if (enabled) {" line129="            doSendButtonState(&quot;fire1&quot;, event)" line130="            doActionFire1(event)" line131="        }" line132="    }" line133="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line134="        doButtonFire2(&quot;c&quot;)" line135="    })" line136="    function doActionReset() {" line137="" line138="    }" line139="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line140="        doButtonUp(&quot;d&quot;)" line141="    })" line142="    function doButtonLeft(event6: string) {" line143="        if (enabled) {" line144="            doSendButtonState(&quot;left&quot;, event6)" line145="            doActionLeft(event6)" line146="        }" line147="    }" line148="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line149="        doButtonFire2(&quot;u&quot;)" line150="    })" line151="    function doSendButtonState(id2: string, event3: string) {" line152="        if (enabled) {" line153="            if (event3 == &quot;u&quot;) {" line154="                radio.sendValue(id2, 0)" line155="            } else if (event3 == &quot;d&quot;) {" line156="                radio.sendValue(id2, 1)" line157="            } else if (event3 == &quot;c&quot;) {" line158="                radio.sendValue(id2, 2)" line159="            }" line160="        }" line161="    }" line162="    function doActionFire2(event87: string) {" line163="" line164="    }" line165="    function doButtonUp(event4: string) {" line166="        if (enabled) {" line167="            doSendButtonState(&quot;up&quot;, event4)" line168="            doActionUp(event4)" line169="        }" line170="    }" line171="    radio.onReceivedString(function (receivedString) {" line172="        if (enabled) {" line173="            if (receivedString == &quot;reset&quot;) {" line174="                doActionReset()" line175="            }" line176="        }" line177="    })" line178="    function doActionUp(event82: string) {" line179="" line180="    }" line181="    radio.onReceivedValue(function (name, value) {" line182="        if (enabled) {" line183="            if (name == &quot;up&quot;) {" line184="                doActionUp(doGetEventFromNum(value))" line185="            } else if (name == &quot;down&quot;) {" line186="                doActionDown(doGetEventFromNum(value))" line187="            } else if (name == &quot;left&quot;) {" line188="                doActionLeft(doGetEventFromNum(value))" line189="            } else if (name == &quot;right&quot;) {" line190="                doActionRight(doGetEventFromNum(value))" line191="            } else if (name == &quot;fire1&quot;) {" line192="                doActionFire1(doGetEventFromNum(value))" line193="            } else if (name == &quot;fire2&quot;) {" line194="                doActionFire2(doGetEventFromNum(value))" line195="            }" line196="        }" line197="    })" line198="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line199="        doButtonUp(&quot;u&quot;)" line200="    })" line201="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line202="        doButtonFire1(&quot;u&quot;)" line203="    })" line204="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line205="        doButtonLeft(&quot;c&quot;)" line206="    })" line207="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line208="        doButtonRight(&quot;d&quot;)" line209="    })" line210="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line211="        doButtonFire1(&quot;c&quot;)" line212="    })" line213="    Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line214="        doButtonLeft(&quot;d&quot;)" line215="    })" line216="" line217="}" numlines="218"></mutation></block></next></block></next></block></next></block></statement></block></xml>