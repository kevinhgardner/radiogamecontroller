<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="1uEs.Up*0}]?`a822X@6" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="a6|e^g@|,x~xTPFO:[M7" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace RadioGameController {" line1="" line2="    let isController = false;" line3="    let enabled = false;" line4="    let handlers: Action[][] = [[]];" line5="" line6="    export enum RadioGameControllerButtons {" line7="        //% block=&quot;Joypad Up&quot;" line8="        Up = Kitronik_Game_Controller.ControllerButtonPins.Up," line9="        //% block=&quot;Joypad Down&quot;" line10="        Down = Kitronik_Game_Controller.ControllerButtonPins.Down," line11="        //% block=&quot;Joypad Left&quot;" line12="        Left = Kitronik_Game_Controller.ControllerButtonPins.Left," line13="        //% block=&quot;Joypad Right&quot;" line14="        Right = Kitronik_Game_Controller.ControllerButtonPins.Right," line15="        //% block=&quot;Joypad Fire1&quot;" line16="        Fire1 = Kitronik_Game_Controller.ControllerButtonPins.Fire1," line17="        //% block=&quot;Joypad Fire2&quot;" line18="        Fire2 = Kitronik_Game_Controller.ControllerButtonPins.Fire2," line19="        //% block=&quot;Button A&quot;" line20="        ButtonA = DAL.MICROBIT_ID_BUTTON_A," line21="        //% block=&quot;Button B&quot;" line22="        ButtonB = DAL.MICROBIT_ID_BUTTON_B," line23="        //% block=&quot;Button AB&quot;" line24="        ButtonAB = DAL.MICROBIT_ID_BUTTON_AB," line25="    }" line26="" line27="    export enum RadioGameControllerButtonEvents {" line28="        //% block=&quot;up&quot;" line29="        Up = Kitronik_Game_Controller.ControllerButtonEvents.Up," line30="        //% block=&quot;down&quot;" line31="        Down = Kitronik_Game_Controller.ControllerButtonEvents.Down," line32="        //% block=&quot;click&quot;" line33="        Click = Kitronik_Game_Controller.ControllerButtonEvents.Click," line34="    }" line35="" line36="    //% block" line37="    export function enable(radioId: number) {" line38="        if (!enabled) {" line39="            init(radioId)" line40="        }" line41="    }" line42="" line43="    //% block" line44="    export function onButtonPress(button: RadioGameControllerButtons, event: RadioGameControllerButtonEvents, handler: Action) {" line45="        if (!handlers[button]) {" line46="            handlers[button] = [];" line47="        }" line48="        handlers[button][event] = handler;" line49="    }" line50="" line51="    function init(radioId: number) {" line52="        enabled = true;" line53="        radio.setGroup(radioId)" line54="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line55="            doAction(RadioGameControllerButtons.Up, RadioGameControllerButtonEvents.Up)" line56="        })" line57="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line58="            doAction(RadioGameControllerButtons.Up, RadioGameControllerButtonEvents.Down)" line59="        })" line60="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Up, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line61="            doAction(RadioGameControllerButtons.Up, RadioGameControllerButtonEvents.Click)" line62="        })" line63="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line64="            doAction(RadioGameControllerButtons.Down, RadioGameControllerButtonEvents.Up)" line65="        })" line66="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line67="            doAction(RadioGameControllerButtons.Down, RadioGameControllerButtonEvents.Down)" line68="        })" line69="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Down, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line70="            doAction(RadioGameControllerButtons.Down, RadioGameControllerButtonEvents.Click)" line71="        })" line72="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line73="            doAction(RadioGameControllerButtons.Right, RadioGameControllerButtonEvents.Up)" line74="        })" line75="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line76="            doAction(RadioGameControllerButtons.Right, RadioGameControllerButtonEvents.Down)" line77="        })" line78="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Right, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line79="            doAction(RadioGameControllerButtons.Right, RadioGameControllerButtonEvents.Click)" line80="        })" line81="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line82="            doAction(RadioGameControllerButtons.Left, RadioGameControllerButtonEvents.Up)" line83="        })" line84="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line85="            doAction(RadioGameControllerButtons.Left, RadioGameControllerButtonEvents.Down)" line86="        })" line87="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Left, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line88="            doAction(RadioGameControllerButtons.Left, RadioGameControllerButtonEvents.Click)" line89="        })" line90="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line91="            doAction(RadioGameControllerButtons.Fire1, RadioGameControllerButtonEvents.Up)" line92="        })" line93="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line94="            doAction(RadioGameControllerButtons.Fire1, RadioGameControllerButtonEvents.Down)" line95="        })" line96="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire1, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line97="            doAction(RadioGameControllerButtons.Fire1, RadioGameControllerButtonEvents.Click)" line98="        })" line99="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Up, function () {" line100="            doAction(RadioGameControllerButtons.Fire2, RadioGameControllerButtonEvents.Up)" line101="        })" line102="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Down, function () {" line103="            doAction(RadioGameControllerButtons.Fire2, RadioGameControllerButtonEvents.Down)" line104="        })" line105="        Kitronik_Game_Controller.onButtonPress(Kitronik_Game_Controller.ControllerButtonPins.Fire2, Kitronik_Game_Controller.ControllerButtonEvents.Click, function () {" line106="            doAction(RadioGameControllerButtons.Fire2, RadioGameControllerButtonEvents.Click)" line107="        })" line108="        input.onButtonPressed(Button.A, function () {" line109="            doAction(RadioGameControllerButtons.ButtonA, RadioGameControllerButtonEvents.Click)" line110="            doAction(RadioGameControllerButtons.ButtonA, RadioGameControllerButtonEvents.Up)" line111="            doAction(RadioGameControllerButtons.ButtonA, RadioGameControllerButtonEvents.Down)" line112="        })" line113="        input.onButtonPressed(Button.B, function () {" line114="            doAction(RadioGameControllerButtons.ButtonB, RadioGameControllerButtonEvents.Click)" line115="            doAction(RadioGameControllerButtons.ButtonB, RadioGameControllerButtonEvents.Up)" line116="            doAction(RadioGameControllerButtons.ButtonB, RadioGameControllerButtonEvents.Down)" line117="        })" line118="        input.onButtonPressed(Button.AB, function () {" line119="            doAction(RadioGameControllerButtons.ButtonAB, RadioGameControllerButtonEvents.Click)" line120="            doAction(RadioGameControllerButtons.ButtonAB, RadioGameControllerButtonEvents.Up)" line121="            doAction(RadioGameControllerButtons.ButtonAB, RadioGameControllerButtonEvents.Down)" line122="        })" line123="" line124="    }" line125="" line126="    function doAction(button: RadioGameControllerButtons, event: RadioGameControllerButtonEvents) {" line127="        doSendButtonState(button, event)" line128="        if (handlers[button] &amp;&amp; handlers[button][event]) {" line129="            handlers[button][event]()" line130="        }" line131="    }" line132="" line133="    function doSendButtonState(button: RadioGameControllerButtons, event: RadioGameControllerButtonEvents) {" line134="        radio.sendValue(&quot;rgc_&quot; + button, event)" line135="    }" line136="" line137="    radio.onReceivedValue(function (name, value) {" line138="        if (enabled) {" line139="            let splitted = name.split(&quot;_&quot;)" line140="            if (splitted[0].compare(&quot;rgc_&quot;)) {" line141="                let b = parseInt(splitted[1])" line142="                if (handlers[b] &amp;&amp; handlers[b][value]) {" line143="                    handlers[b][value]()" line144="                }" line145="            }" line146="        }" line147="    })" line148="" line149="" line150="}" numlines="151"></mutation></block></statement></block><block type="basic_show_icon" id="?Qm1,,/C3g{0.T^6*]Qu" disabled="true" x="1718" y="344"><field name="i">IconNames.Heart</field></block><block type="control_raise_event" id="[3GAGy#oMp!upU%,.7]+" disabled="true" x="1877" y="553"><value name="src"><shadow type="control_event_source_id" id="XsFC,w1/eA0s-}]DcTnr" disabled="true"><field name="id">EventBusSource.MICROBIT_ID_BUTTON_A</field></shadow></value><value name="value"><shadow type="control_event_value_id" id="Eooq;sZD(bCT%X|22[u7" disabled="true"><field name="id">EventBusValue.MICROBIT_EVT_ANY</field></shadow></value></block><block type="control_raise_event" id="Q[j)L)rDxkCZxfYV@|Pa" disabled="true" x="1928" y="778"><value name="src"><shadow type="control_event_source_id" id="VYYad.1C0}!_hy2E)k!b" disabled="true"><field name="id">EventBusSource.MICROBIT_ID_BUTTON_A</field></shadow></value><value name="value"><shadow type="control_event_value_id" id="PoaKXnzy$_@r?e@|(M9x" disabled="true"><field name="id">EventBusValue.MICROBIT_EVT_ANY</field></shadow></value></block></xml>